/*
 * Copyright (c) 2001-2024, The Ohio State University. All rights reserved.
 * This file is part of the MVAPICH software package developed by the team
 * members of The Ohio State University's Network-Based Computing Laboratory
 * (NBCL), headed by Professor Dhabaleswar K. (DK) Panda. For detailed
 * copyright and licensing information, please refer to the copyright file
 * COPYRIGHT in the top level MVAPICH directory.
 */

/* 
 * OSU pre header. Device-independent functionality
 * DO NOT HEADER EDIT DIRECTLY: AUTOGENERATED FROM mvp_pre.h.in
 */

#ifndef _MVP_PRE_H_
#define _MVP_PRE_H_

#include "mvp_ofi_capability_sets.h"
#include "mvp_arch_hca_detect.h"
#include "mvp_comm_override.h"
#include "mvp_debug_utils.h"
#include "mvp_utils.h"
#include "sharp_type.h"

/* declare endpoint and request handles. Actual structs are further in */
typedef struct MPIDI_MVP_ep *MPIDI_MVP_ep_h;
typedef struct MPIDI_MVP_smp_request *MPIDI_MVP_smp_request_h; 

extern MPIR_Object_alloc_t MPIDI_MVP_smp_request_mem;

/*
 * this should probably move eventually but for now we will keep it here just
 * to make the free function work without warnings
 */
void MPIDI_MVP_smp_request_free(MPIR_Request *req);

/*
 * The MVP struct is a superset on the underlying netmod structs
 * since it can be both, we include both datatypes as part of the struct
 * before overwriting the macro. Because unions are cool, this allows us to
 * also access the data stored in the main netmod struct from the mvp version
 *
 * That is, for a given MPIR_Request *ptr, ptr->dev.ch4.netmod.ucx will be the
 * same memory location as ptr->dev.ch4.netmod.mvp.super.ucx. This mostly helps
 * us to pass just the MPIDI_MVP_request_t substruct to our functions and still
 * reference the underlying network as needed.
 */
typedef struct {
    union {
        MPIDI_NM_REQUEST_DECL
    } super;
    MPIDI_MVP_smp_request_h mvp_smp_request;
#if defined(_SHARP_SUPPORT_)
    void *mvp_sharp_request;
#endif
} MPIDI_MVP_request_t;

typedef struct {
    union {
        MPIDI_NM_ADDR_DECL
    } super;
    //MPIDI_MVP_ep_h vc[MPIDI_CH4_MAX_VCIS][MPIDI_CH4_MAX_VCIS];
    MPIDI_MVP_ep_h vc;
} MPIDI_MVP_addr_t;

/* Overwrite the request declaration with our version */
#ifdef MPIDI_NM_REQUEST_DECL
#undef MPIDI_NM_REQUEST_DECL
#endif /* MPIDI_NM_REQUEST_DECL */
#define MPIDI_NM_REQUEST_DECL       \
    MPIDI_UCX_request_t ucx;       \
    MPIDI_MVP_request_t mvp;

#ifdef MPIDI_NM_ADDR_DECL
#undef MPIDI_NM_ADDR_DECL
#endif /* MPIDI_NM_ADDR_DECL */
#define MPIDI_NM_ADDR_DECL          \
    MPIDI_UCX_addr_t ucx;          \
    MPIDI_MVP_addr_t mvp;

#endif /* _MVP_PRE_H_ */
